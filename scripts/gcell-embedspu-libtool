#!/bin/sh
#
# Take a spu executable and turn into into a libtool compatible .lo (and .o)
# file.
# This is needed when you want to embed a SPU executable into a shared library.
#
# The symbol assigned to the embedded executable is the basename of the
# input file with an _handle appended.  E.g., if the input filename is
# my_spe_tricks the symbol name is my_spe_tricks_handle.

flags=
if [ "$1" = -m32 -o "$1" = -m64 ]; then
  flags=$1
  shift
fi

embedspu=ppu-embedspu
if [ "$1" = -c ]; then
  shift
  embedspu=$1
  shift
fi

if [ $# -ne 2 ]; then
  echo "usage: $0 [-m32|-m64] [-c embedspu] spu_executable output_file.lo" 1>&2
  exit 1
fi

spu_executable=$1
lo_file=$2
base_name=${spu_executable##*/}
symbol_name=${base_name}_handle

# try to make .libs in case it's not there
mkdir -p .libs

# generate the .o file that wraps the SPU executable
${embedspu} ${flags} -fpic ${symbol_name} ${spu_executable} .libs/${base_name}.o

# generate the .lo libtool file that points at all the right places
rm -f $lo_file
cat >$lo_file.new <<EOF
# $lo_file - a libtool object file
# Generated by ltmain.sh - GNU libtool 1.5.22 (1.1220.2.365 2005/12/18 22:14:06)
#
# Please DO NOT delete this file!
# It is necessary for linking the library.

pic_object='.libs/${base_name}.o'
non_pic_object=none
EOF

mv $lo_file.new $lo_file

